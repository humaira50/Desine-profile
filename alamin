<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>LIVE SCAM</title>
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background-color: black;
      color: white;
      text-align: center;
    }
    header {
      display: flex;
      justify-content: space-between;
      padding: 10px 20px;
      background-color: #111;
      font-size: 18px;
    }
    h1 {
      font-size: 28px;
      font-weight: bold;
    }
    .info {
      margin-top: 30px;
      font-size: 20px;
    }
    .highlight {
      color: gold;
    }
    .lowest {
      color: red;
    }
    #timer {
      font-size: 40px;
      margin-top: 10px;
    }
    .sound-toggle {
      position: fixed;
      bottom: 10px;
      right: 10px;
      background: #222;
      border: 1px solid #555;
      border-radius: 8px;
      padding: 8px 12px;
      color: white;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <header>
    <div id="local-time">Time</div>
    <h1>LIVE SCAM</h1>
    <div>WinGo 30 Seconds</div>
  </header>

  <div class="info">
    Period: <span id="period-number">Loading...</span>
    <div id="timer">30</div>
    <div>
      Big: <span id="big-amount">--</span> <span id="big-label"></span><br>
      Small: <span id="small-amount">--</span> <span id="small-label"></span>
    </div>
  </div>

  <div class="sound-toggle" onclick="toggleSound()">ðŸ”Š Sound ON</div>

  <audio id="countdown-sound" preload="auto">
    <source src="https://cdn.pixabay.com/audio/2022/03/15/audio_4be5fb48be.mp3" type="audio/mpeg" />
  </audio>

  <script>
    let soundOn = true;
    let countdown = 30;
    let timer;

    function toggleSound() {
      soundOn = !soundOn;
      document.querySelector('.sound-toggle').innerText = soundOn ? 'ðŸ”Š Sound ON' : 'ðŸ”‡ Sound OFF';
    }

    function updateTime() {
      const now = new Date();
      document.getElementById('local-time').textContent = now.toLocaleTimeString();
    }

    function startCountdown() {
      clearInterval(timer);
      countdown = 30;
      document.getElementById('timer').textContent = countdown;
      timer = setInterval(() => {
        countdown--;
        document.getElementById('timer').textContent = countdown;
        if (countdown <= 5 && soundOn) {
          document.getElementById('countdown-sound').play();
        }
        if (countdown === 0) {
          clearInterval(timer);
          fetchData();
          startCountdown();
        }
      }, 1000);
    }

    async function fetchData() {
      const ts = Date.now();
      const url = https://draw.ar-lottery01.com/WinGo/WinGo_30S/GetHistoryIssuePage.json?ts=${ts};
      try {
        const res = await fetch(url);
        const data = await res.json();
        const last = data?.data?.list[0];
        if (last) {
          document.getElementById('period-number').textContent = last.issueNumber;
          const big = parseFloat(last.bigBetAmount);
          const small = parseFloat(last.smallBetAmount);
          document.getElementById('big-amount').textContent = big;
          document.getElementById('small-amount').textContent = small;

          if (big > small) {
            document.getElementById('big-label').textContent = 'HIGHEST';
            document.getElementById('big-label').className = 'highlight';
            document.getElementById('small-label').textContent = 'LOWEST';
            document.getElementById('small-label').className = 'lowest';
          } else if (small > big) {
            document.getElementById('small-label').textContent = 'HIGHEST';
            document.getElementById('small-label').className = 'highlight';
            document.getElementById('big-label').textContent = 'LOWEST';
            document.getElementById('big-label').className = 'lowest';
          } else {
            document.getElementById('big-label').textContent = '';
            document.getElementById('small-label').textContent = '';
          }
        }
      } catch (err) {
        console.error('Fetch error:', err);
      }
    }

    // Init
    updateTime();
    setInterval(updateTime, 1000);
    fetchData();
    startCountdown();
  </script>
</body>
</html>
